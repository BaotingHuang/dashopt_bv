{"remainingRequest":"/home/tarena/dashopt_bv/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/tarena/dashopt_bv/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tarena/dashopt_bv/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tarena/dashopt_bv/src/index.vue?vue&type=template&id=2964abc9&","dependencies":[{"path":"/home/tarena/dashopt_bv/src/index.vue","mtime":1596103629851},{"path":"/home/tarena/dashopt_bv/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tarena/dashopt_bv/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/tarena/dashopt_bv/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tarena/dashopt_bv/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}